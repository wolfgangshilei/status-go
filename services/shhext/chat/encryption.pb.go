// Code generated by protoc-gen-go. DO NOT EDIT.
// source: encryption.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bundle struct {
	Identity             []byte   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	SignedPreKey         []byte   `protobuf:"bytes,2,opt,name=signed_pre_key,json=signedPreKey,proto3" json:"signed_pre_key,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}
func (*Bundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_213999a68e9e1886, []int{0}
}
func (m *Bundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle.Unmarshal(m, b)
}
func (m *Bundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle.Marshal(b, m, deterministic)
}
func (dst *Bundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle.Merge(dst, src)
}
func (m *Bundle) XXX_Size() int {
	return xxx_messageInfo_Bundle.Size(m)
}
func (m *Bundle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle proto.InternalMessageInfo

func (m *Bundle) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Bundle) GetSignedPreKey() []byte {
	if m != nil {
		return m.SignedPreKey
	}
	return nil
}

func (m *Bundle) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BundleContainer struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	PrivateSignedPreKey  []byte   `protobuf:"bytes,2,opt,name=private_signed_pre_key,json=privateSignedPreKey,proto3" json:"private_signed_pre_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BundleContainer) Reset()         { *m = BundleContainer{} }
func (m *BundleContainer) String() string { return proto.CompactTextString(m) }
func (*BundleContainer) ProtoMessage()    {}
func (*BundleContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_213999a68e9e1886, []int{1}
}
func (m *BundleContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BundleContainer.Unmarshal(m, b)
}
func (m *BundleContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BundleContainer.Marshal(b, m, deterministic)
}
func (dst *BundleContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BundleContainer.Merge(dst, src)
}
func (m *BundleContainer) XXX_Size() int {
	return xxx_messageInfo_BundleContainer.Size(m)
}
func (m *BundleContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_BundleContainer.DiscardUnknown(m)
}

var xxx_messageInfo_BundleContainer proto.InternalMessageInfo

func (m *BundleContainer) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

func (m *BundleContainer) GetPrivateSignedPreKey() []byte {
	if m != nil {
		return m.PrivateSignedPreKey
	}
	return nil
}

type DRHeader struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	N                    uint32   `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	Pn                   uint32   `protobuf:"varint,3,opt,name=pn,proto3" json:"pn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DRHeader) Reset()         { *m = DRHeader{} }
func (m *DRHeader) String() string { return proto.CompactTextString(m) }
func (*DRHeader) ProtoMessage()    {}
func (*DRHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_213999a68e9e1886, []int{2}
}
func (m *DRHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DRHeader.Unmarshal(m, b)
}
func (m *DRHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DRHeader.Marshal(b, m, deterministic)
}
func (dst *DRHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DRHeader.Merge(dst, src)
}
func (m *DRHeader) XXX_Size() int {
	return xxx_messageInfo_DRHeader.Size(m)
}
func (m *DRHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_DRHeader.DiscardUnknown(m)
}

var xxx_messageInfo_DRHeader proto.InternalMessageInfo

func (m *DRHeader) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *DRHeader) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *DRHeader) GetPn() uint32 {
	if m != nil {
		return m.Pn
	}
	return 0
}

type X3DHHeader struct {
	// Which ephemeral key has been used
	//
	// Types that are valid to be assigned to EphemeralKey:
	//	*X3DHHeader_BundleKey
	//	*X3DHHeader_DhKey
	//	*X3DHHeader_SymKey
	EphemeralKey isX3DHHeader_EphemeralKey `protobuf_oneof:"ephemeral_key"`
	// The bundle used in case of x3dh
	BundleId             []byte   `protobuf:"bytes,4,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *X3DHHeader) Reset()         { *m = X3DHHeader{} }
func (m *X3DHHeader) String() string { return proto.CompactTextString(m) }
func (*X3DHHeader) ProtoMessage()    {}
func (*X3DHHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_213999a68e9e1886, []int{3}
}
func (m *X3DHHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_X3DHHeader.Unmarshal(m, b)
}
func (m *X3DHHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_X3DHHeader.Marshal(b, m, deterministic)
}
func (dst *X3DHHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_X3DHHeader.Merge(dst, src)
}
func (m *X3DHHeader) XXX_Size() int {
	return xxx_messageInfo_X3DHHeader.Size(m)
}
func (m *X3DHHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_X3DHHeader.DiscardUnknown(m)
}

var xxx_messageInfo_X3DHHeader proto.InternalMessageInfo

type isX3DHHeader_EphemeralKey interface {
	isX3DHHeader_EphemeralKey()
}

type X3DHHeader_BundleKey struct {
	BundleKey []byte `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3,oneof"`
}
type X3DHHeader_DhKey struct {
	DhKey []byte `protobuf:"bytes,2,opt,name=dh_key,json=dhKey,proto3,oneof"`
}
type X3DHHeader_SymKey struct {
	SymKey []byte `protobuf:"bytes,3,opt,name=sym_key,json=symKey,proto3,oneof"`
}

func (*X3DHHeader_BundleKey) isX3DHHeader_EphemeralKey() {}
func (*X3DHHeader_DhKey) isX3DHHeader_EphemeralKey()     {}
func (*X3DHHeader_SymKey) isX3DHHeader_EphemeralKey()    {}

func (m *X3DHHeader) GetEphemeralKey() isX3DHHeader_EphemeralKey {
	if m != nil {
		return m.EphemeralKey
	}
	return nil
}

func (m *X3DHHeader) GetBundleKey() []byte {
	if x, ok := m.GetEphemeralKey().(*X3DHHeader_BundleKey); ok {
		return x.BundleKey
	}
	return nil
}

func (m *X3DHHeader) GetDhKey() []byte {
	if x, ok := m.GetEphemeralKey().(*X3DHHeader_DhKey); ok {
		return x.DhKey
	}
	return nil
}

func (m *X3DHHeader) GetSymKey() []byte {
	if x, ok := m.GetEphemeralKey().(*X3DHHeader_SymKey); ok {
		return x.SymKey
	}
	return nil
}

func (m *X3DHHeader) GetBundleId() []byte {
	if m != nil {
		return m.BundleId
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*X3DHHeader) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _X3DHHeader_OneofMarshaler, _X3DHHeader_OneofUnmarshaler, _X3DHHeader_OneofSizer, []interface{}{
		(*X3DHHeader_BundleKey)(nil),
		(*X3DHHeader_DhKey)(nil),
		(*X3DHHeader_SymKey)(nil),
	}
}

func _X3DHHeader_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*X3DHHeader)
	// ephemeral_key
	switch x := m.EphemeralKey.(type) {
	case *X3DHHeader_BundleKey:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.BundleKey)
	case *X3DHHeader_DhKey:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.DhKey)
	case *X3DHHeader_SymKey:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.SymKey)
	case nil:
	default:
		return fmt.Errorf("X3DHHeader.EphemeralKey has unexpected type %T", x)
	}
	return nil
}

func _X3DHHeader_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*X3DHHeader)
	switch tag {
	case 1: // ephemeral_key.bundle_key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.EphemeralKey = &X3DHHeader_BundleKey{x}
		return true, err
	case 2: // ephemeral_key.dh_key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.EphemeralKey = &X3DHHeader_DhKey{x}
		return true, err
	case 3: // ephemeral_key.sym_key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.EphemeralKey = &X3DHHeader_SymKey{x}
		return true, err
	default:
		return false, nil
	}
}

func _X3DHHeader_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*X3DHHeader)
	// ephemeral_key
	switch x := m.EphemeralKey.(type) {
	case *X3DHHeader_BundleKey:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.BundleKey)))
		n += len(x.BundleKey)
	case *X3DHHeader_DhKey:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.DhKey)))
		n += len(x.DhKey)
	case *X3DHHeader_SymKey:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.SymKey)))
		n += len(x.SymKey)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DirectMessageProtocol struct {
	// Types that are valid to be assigned to Encryption:
	//	*DirectMessageProtocol_X3DHHeader
	//	*DirectMessageProtocol_DRHeader
	Encryption           isDirectMessageProtocol_Encryption `protobuf_oneof:"encryption"`
	Payload              []byte                             `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *DirectMessageProtocol) Reset()         { *m = DirectMessageProtocol{} }
func (m *DirectMessageProtocol) String() string { return proto.CompactTextString(m) }
func (*DirectMessageProtocol) ProtoMessage()    {}
func (*DirectMessageProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_213999a68e9e1886, []int{4}
}
func (m *DirectMessageProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectMessageProtocol.Unmarshal(m, b)
}
func (m *DirectMessageProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectMessageProtocol.Marshal(b, m, deterministic)
}
func (dst *DirectMessageProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectMessageProtocol.Merge(dst, src)
}
func (m *DirectMessageProtocol) XXX_Size() int {
	return xxx_messageInfo_DirectMessageProtocol.Size(m)
}
func (m *DirectMessageProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectMessageProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_DirectMessageProtocol proto.InternalMessageInfo

type isDirectMessageProtocol_Encryption interface {
	isDirectMessageProtocol_Encryption()
}

type DirectMessageProtocol_X3DHHeader struct {
	X3DHHeader *X3DHHeader `protobuf:"bytes,1,opt,name=X3DH_header,json=X3DHHeader,proto3,oneof"`
}
type DirectMessageProtocol_DRHeader struct {
	DRHeader *DRHeader `protobuf:"bytes,2,opt,name=DR_header,json=DRHeader,proto3,oneof"`
}

func (*DirectMessageProtocol_X3DHHeader) isDirectMessageProtocol_Encryption() {}
func (*DirectMessageProtocol_DRHeader) isDirectMessageProtocol_Encryption()   {}

func (m *DirectMessageProtocol) GetEncryption() isDirectMessageProtocol_Encryption {
	if m != nil {
		return m.Encryption
	}
	return nil
}

func (m *DirectMessageProtocol) GetX3DHHeader() *X3DHHeader {
	if x, ok := m.GetEncryption().(*DirectMessageProtocol_X3DHHeader); ok {
		return x.X3DHHeader
	}
	return nil
}

func (m *DirectMessageProtocol) GetDRHeader() *DRHeader {
	if x, ok := m.GetEncryption().(*DirectMessageProtocol_DRHeader); ok {
		return x.DRHeader
	}
	return nil
}

func (m *DirectMessageProtocol) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DirectMessageProtocol) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DirectMessageProtocol_OneofMarshaler, _DirectMessageProtocol_OneofUnmarshaler, _DirectMessageProtocol_OneofSizer, []interface{}{
		(*DirectMessageProtocol_X3DHHeader)(nil),
		(*DirectMessageProtocol_DRHeader)(nil),
	}
}

func _DirectMessageProtocol_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DirectMessageProtocol)
	// encryption
	switch x := m.Encryption.(type) {
	case *DirectMessageProtocol_X3DHHeader:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.X3DHHeader); err != nil {
			return err
		}
	case *DirectMessageProtocol_DRHeader:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DRHeader); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DirectMessageProtocol.Encryption has unexpected type %T", x)
	}
	return nil
}

func _DirectMessageProtocol_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DirectMessageProtocol)
	switch tag {
	case 1: // encryption.X3DH_header
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(X3DHHeader)
		err := b.DecodeMessage(msg)
		m.Encryption = &DirectMessageProtocol_X3DHHeader{msg}
		return true, err
	case 2: // encryption.DR_header
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DRHeader)
		err := b.DecodeMessage(msg)
		m.Encryption = &DirectMessageProtocol_DRHeader{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DirectMessageProtocol_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DirectMessageProtocol)
	// encryption
	switch x := m.Encryption.(type) {
	case *DirectMessageProtocol_X3DHHeader:
		s := proto.Size(x.X3DHHeader)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DirectMessageProtocol_DRHeader:
		s := proto.Size(x.DRHeader)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ProtocolMessage struct {
	// An optional bundle is exchanged with each message
	Bundle *Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	// Types that are valid to be assigned to MessageType:
	//	*ProtocolMessage_DirectMessage
	//	*ProtocolMessage_PublicMessage
	MessageType          isProtocolMessage_MessageType `protobuf_oneof:"message_type"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ProtocolMessage) Reset()         { *m = ProtocolMessage{} }
func (m *ProtocolMessage) String() string { return proto.CompactTextString(m) }
func (*ProtocolMessage) ProtoMessage()    {}
func (*ProtocolMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_213999a68e9e1886, []int{5}
}
func (m *ProtocolMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolMessage.Unmarshal(m, b)
}
func (m *ProtocolMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolMessage.Marshal(b, m, deterministic)
}
func (dst *ProtocolMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolMessage.Merge(dst, src)
}
func (m *ProtocolMessage) XXX_Size() int {
	return xxx_messageInfo_ProtocolMessage.Size(m)
}
func (m *ProtocolMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolMessage proto.InternalMessageInfo

type isProtocolMessage_MessageType interface {
	isProtocolMessage_MessageType()
}

type ProtocolMessage_DirectMessage struct {
	DirectMessage *DirectMessageProtocol `protobuf:"bytes,101,opt,name=direct_message,json=directMessage,proto3,oneof"`
}
type ProtocolMessage_PublicMessage struct {
	PublicMessage []byte `protobuf:"bytes,102,opt,name=public_message,json=publicMessage,proto3,oneof"`
}

func (*ProtocolMessage_DirectMessage) isProtocolMessage_MessageType() {}
func (*ProtocolMessage_PublicMessage) isProtocolMessage_MessageType() {}

func (m *ProtocolMessage) GetMessageType() isProtocolMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (m *ProtocolMessage) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

func (m *ProtocolMessage) GetDirectMessage() *DirectMessageProtocol {
	if x, ok := m.GetMessageType().(*ProtocolMessage_DirectMessage); ok {
		return x.DirectMessage
	}
	return nil
}

func (m *ProtocolMessage) GetPublicMessage() []byte {
	if x, ok := m.GetMessageType().(*ProtocolMessage_PublicMessage); ok {
		return x.PublicMessage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProtocolMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProtocolMessage_OneofMarshaler, _ProtocolMessage_OneofUnmarshaler, _ProtocolMessage_OneofSizer, []interface{}{
		(*ProtocolMessage_DirectMessage)(nil),
		(*ProtocolMessage_PublicMessage)(nil),
	}
}

func _ProtocolMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProtocolMessage)
	// message_type
	switch x := m.MessageType.(type) {
	case *ProtocolMessage_DirectMessage:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DirectMessage); err != nil {
			return err
		}
	case *ProtocolMessage_PublicMessage:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.PublicMessage)
	case nil:
	default:
		return fmt.Errorf("ProtocolMessage.MessageType has unexpected type %T", x)
	}
	return nil
}

func _ProtocolMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProtocolMessage)
	switch tag {
	case 101: // message_type.direct_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DirectMessageProtocol)
		err := b.DecodeMessage(msg)
		m.MessageType = &ProtocolMessage_DirectMessage{msg}
		return true, err
	case 102: // message_type.public_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.MessageType = &ProtocolMessage_PublicMessage{x}
		return true, err
	default:
		return false, nil
	}
}

func _ProtocolMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProtocolMessage)
	// message_type
	switch x := m.MessageType.(type) {
	case *ProtocolMessage_DirectMessage:
		s := proto.Size(x.DirectMessage)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProtocolMessage_PublicMessage:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.PublicMessage)))
		n += len(x.PublicMessage)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Bundle)(nil), "chat.Bundle")
	proto.RegisterType((*BundleContainer)(nil), "chat.BundleContainer")
	proto.RegisterType((*DRHeader)(nil), "chat.DRHeader")
	proto.RegisterType((*X3DHHeader)(nil), "chat.X3DHHeader")
	proto.RegisterType((*DirectMessageProtocol)(nil), "chat.DirectMessageProtocol")
	proto.RegisterType((*ProtocolMessage)(nil), "chat.ProtocolMessage")
}

func init() { proto.RegisterFile("encryption.proto", fileDescriptor_encryption_213999a68e9e1886) }

var fileDescriptor_encryption_213999a68e9e1886 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0x8e, 0xd3, 0x30,
	0x18, 0x4c, 0xda, 0x25, 0xbb, 0xfd, 0x36, 0x49, 0x2b, 0x23, 0x20, 0xb0, 0x48, 0xa0, 0x68, 0x25,
	0xb8, 0xd0, 0x03, 0xbd, 0x71, 0x2c, 0x39, 0x04, 0x21, 0xa4, 0x95, 0xb9, 0x70, 0x8b, 0xd2, 0xf8,
	0x63, 0x63, 0x91, 0x3a, 0x96, 0xe3, 0x22, 0xe5, 0x29, 0x78, 0x08, 0xde, 0x81, 0xe7, 0x43, 0xfe,
	0x69, 0xd3, 0xc3, 0x1e, 0xf6, 0x56, 0x7f, 0x33, 0x63, 0xcf, 0xcc, 0xd7, 0xc0, 0x0a, 0x45, 0xa3,
	0x46, 0xa9, 0x79, 0x2f, 0xd6, 0x52, 0xf5, 0xba, 0x27, 0x17, 0x4d, 0x5b, 0xeb, 0xbc, 0x85, 0x68,
	0x7b, 0x10, 0xac, 0x43, 0xf2, 0x0a, 0xae, 0x38, 0x43, 0xa1, 0xb9, 0x1e, 0xb3, 0xf0, 0x6d, 0xf8,
	0x3e, 0xa6, 0xa7, 0x33, 0xb9, 0x85, 0x74, 0xe0, 0xf7, 0x02, 0x59, 0x25, 0x15, 0x56, 0xbf, 0x70,
	0xcc, 0x66, 0x96, 0x11, 0xbb, 0xe9, 0x9d, 0xc2, 0xaf, 0x38, 0x92, 0xd7, 0xb0, 0x30, 0xe7, 0x5a,
	0x1f, 0x14, 0x66, 0x73, 0x4b, 0x98, 0x06, 0x79, 0x07, 0x4b, 0xf7, 0xd2, 0xe7, 0x5e, 0xe8, 0x9a,
	0x0b, 0x54, 0xe4, 0x16, 0xa2, 0x9d, 0x1d, 0xd9, 0x07, 0xaf, 0x3f, 0xc6, 0x6b, 0xe3, 0x69, 0xed,
	0x68, 0xd4, 0x63, 0x64, 0x03, 0xcf, 0xa5, 0xe2, 0xbf, 0x6b, 0x8d, 0xd5, 0x83, 0x26, 0x9e, 0x7a,
	0xf4, 0xfb, 0x99, 0x97, 0xfc, 0x13, 0x5c, 0x15, 0xb4, 0xc4, 0x9a, 0xa1, 0x22, 0x2b, 0x98, 0x1b,
	0xb6, 0x0b, 0x65, 0x7e, 0x92, 0x18, 0x42, 0x61, 0xd5, 0x09, 0x0d, 0x05, 0x49, 0x61, 0x26, 0x85,
	0x35, 0x9c, 0xd0, 0x99, 0x14, 0xf9, 0x9f, 0x10, 0xe0, 0xc7, 0xa6, 0x28, 0xbd, 0xfc, 0x0d, 0x80,
	0x73, 0x52, 0x9d, 0x6e, 0x29, 0x03, 0xba, 0x70, 0x33, 0x93, 0xfb, 0x05, 0x44, 0xac, 0x9d, 0x0c,
	0x95, 0x01, 0x7d, 0xc2, 0x5a, 0x03, 0xbc, 0x84, 0xcb, 0x61, 0xdc, 0x5b, 0x64, 0xee, 0x91, 0x68,
	0x18, 0xf7, 0x06, 0xba, 0x01, 0x7f, 0x41, 0xc5, 0x59, 0x76, 0xe1, 0xea, 0x76, 0x83, 0x2f, 0x6c,
	0xbb, 0x84, 0x04, 0x65, 0x8b, 0x7b, 0x54, 0x75, 0x67, 0xd4, 0xf9, 0xdf, 0x10, 0x9e, 0x15, 0x5c,
	0x61, 0xa3, 0xbf, 0xe1, 0x30, 0xd4, 0xf7, 0x78, 0x67, 0x56, 0xd8, 0xf4, 0x1d, 0xd9, 0xc0, 0xb5,
	0xb1, 0x5a, 0xb5, 0xd6, 0xab, 0xef, 0x71, 0xe5, 0x7a, 0x9c, 0x32, 0x94, 0x01, 0x3d, 0x4f, 0xf4,
	0x01, 0x16, 0x05, 0x3d, 0x4a, 0x66, 0x56, 0x92, 0x3a, 0xc9, 0xb1, 0xb3, 0x32, 0xa0, 0x53, 0x7f,
	0x19, 0x5c, 0xca, 0x7a, 0xec, 0xfa, 0x9a, 0xf9, 0xad, 0x1e, 0x8f, 0xdb, 0x18, 0x60, 0xfa, 0x5f,
	0xe5, 0xff, 0x42, 0x58, 0x1e, 0x8d, 0x79, 0x9f, 0x8f, 0x5c, 0x71, 0x01, 0x29, 0xb3, 0xf1, 0xaa,
	0xbd, 0xd3, 0x65, 0x68, 0xd9, 0x37, 0xde, 0xd5, 0x43, 0xd1, 0xcb, 0x80, 0x26, 0xec, 0x1c, 0x20,
	0xef, 0x20, 0x95, 0x87, 0x5d, 0xc7, 0x9b, 0xd3, 0x2d, 0x3f, 0x7d, 0xeb, 0x89, 0x9b, 0x7b, 0xe2,
	0x36, 0x85, 0xd8, 0x33, 0x2a, 0x3d, 0x4a, 0xdc, 0x45, 0xf6, 0x8b, 0xd8, 0xfc, 0x0f, 0x00, 0x00,
	0xff, 0xff, 0x33, 0x61, 0xb5, 0x75, 0x25, 0x03, 0x00, 0x00,
}
