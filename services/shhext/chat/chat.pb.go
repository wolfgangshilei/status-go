// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bundle struct {
	Identity             []byte   `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	SignedPreKey         []byte   `protobuf:"bytes,2,opt,name=signed_pre_key,json=signedPreKey,proto3" json:"signed_pre_key,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}
func (*Bundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{0}
}
func (m *Bundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle.Unmarshal(m, b)
}
func (m *Bundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle.Marshal(b, m, deterministic)
}
func (dst *Bundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle.Merge(dst, src)
}
func (m *Bundle) XXX_Size() int {
	return xxx_messageInfo_Bundle.Size(m)
}
func (m *Bundle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle proto.InternalMessageInfo

func (m *Bundle) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Bundle) GetSignedPreKey() []byte {
	if m != nil {
		return m.SignedPreKey
	}
	return nil
}

func (m *Bundle) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BundleContainer struct {
	Bundle               *Bundle  `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	PrivateSignedPreKey  []byte   `protobuf:"bytes,2,opt,name=private_signed_pre_key,json=privateSignedPreKey,proto3" json:"private_signed_pre_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BundleContainer) Reset()         { *m = BundleContainer{} }
func (m *BundleContainer) String() string { return proto.CompactTextString(m) }
func (*BundleContainer) ProtoMessage()    {}
func (*BundleContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{1}
}
func (m *BundleContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BundleContainer.Unmarshal(m, b)
}
func (m *BundleContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BundleContainer.Marshal(b, m, deterministic)
}
func (dst *BundleContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BundleContainer.Merge(dst, src)
}
func (m *BundleContainer) XXX_Size() int {
	return xxx_messageInfo_BundleContainer.Size(m)
}
func (m *BundleContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_BundleContainer.DiscardUnknown(m)
}

var xxx_messageInfo_BundleContainer proto.InternalMessageInfo

func (m *BundleContainer) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

func (m *BundleContainer) GetPrivateSignedPreKey() []byte {
	if m != nil {
		return m.PrivateSignedPreKey
	}
	return nil
}

// What is sent through the wire
type OneToOnePayload struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	ContentType          string   `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	MessageType          string   `protobuf:"bytes,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	ClockValue           int64    `protobuf:"varint,4,opt,name=clock_value,json=clockValue,proto3" json:"clock_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneToOnePayload) Reset()         { *m = OneToOnePayload{} }
func (m *OneToOnePayload) String() string { return proto.CompactTextString(m) }
func (*OneToOnePayload) ProtoMessage()    {}
func (*OneToOnePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{2}
}
func (m *OneToOnePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneToOnePayload.Unmarshal(m, b)
}
func (m *OneToOnePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneToOnePayload.Marshal(b, m, deterministic)
}
func (dst *OneToOnePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneToOnePayload.Merge(dst, src)
}
func (m *OneToOnePayload) XXX_Size() int {
	return xxx_messageInfo_OneToOnePayload.Size(m)
}
func (m *OneToOnePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_OneToOnePayload.DiscardUnknown(m)
}

var xxx_messageInfo_OneToOnePayload proto.InternalMessageInfo

func (m *OneToOnePayload) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *OneToOnePayload) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *OneToOnePayload) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *OneToOnePayload) GetClockValue() int64 {
	if m != nil {
		return m.ClockValue
	}
	return 0
}

type ContactUpdatePayload struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProfileImage         string   `protobuf:"bytes,2,opt,name=profile_image,json=profileImage,proto3" json:"profile_image,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	FcmToken             string   `protobuf:"bytes,4,opt,name=fcm_token,json=fcmToken,proto3" json:"fcm_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContactUpdatePayload) Reset()         { *m = ContactUpdatePayload{} }
func (m *ContactUpdatePayload) String() string { return proto.CompactTextString(m) }
func (*ContactUpdatePayload) ProtoMessage()    {}
func (*ContactUpdatePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{3}
}
func (m *ContactUpdatePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactUpdatePayload.Unmarshal(m, b)
}
func (m *ContactUpdatePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactUpdatePayload.Marshal(b, m, deterministic)
}
func (dst *ContactUpdatePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactUpdatePayload.Merge(dst, src)
}
func (m *ContactUpdatePayload) XXX_Size() int {
	return xxx_messageInfo_ContactUpdatePayload.Size(m)
}
func (m *ContactUpdatePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactUpdatePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ContactUpdatePayload proto.InternalMessageInfo

func (m *ContactUpdatePayload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContactUpdatePayload) GetProfileImage() string {
	if m != nil {
		return m.ProfileImage
	}
	return ""
}

func (m *ContactUpdatePayload) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ContactUpdatePayload) GetFcmToken() string {
	if m != nil {
		return m.FcmToken
	}
	return ""
}

type OneToOneRPC struct {
	Src                  string           `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  string           `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Payload              *OneToOnePayload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OneToOneRPC) Reset()         { *m = OneToOneRPC{} }
func (m *OneToOneRPC) String() string { return proto.CompactTextString(m) }
func (*OneToOneRPC) ProtoMessage()    {}
func (*OneToOneRPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{4}
}
func (m *OneToOneRPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneToOneRPC.Unmarshal(m, b)
}
func (m *OneToOneRPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneToOneRPC.Marshal(b, m, deterministic)
}
func (dst *OneToOneRPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneToOneRPC.Merge(dst, src)
}
func (m *OneToOneRPC) XXX_Size() int {
	return xxx_messageInfo_OneToOneRPC.Size(m)
}
func (m *OneToOneRPC) XXX_DiscardUnknown() {
	xxx_messageInfo_OneToOneRPC.DiscardUnknown(m)
}

var xxx_messageInfo_OneToOneRPC proto.InternalMessageInfo

func (m *OneToOneRPC) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *OneToOneRPC) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *OneToOneRPC) GetPayload() *OneToOnePayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ContactUpdateRPC struct {
	Src                  string                `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Dst                  string                `protobuf:"bytes,2,opt,name=dst,proto3" json:"dst,omitempty"`
	Payload              *ContactUpdatePayload `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ContactUpdateRPC) Reset()         { *m = ContactUpdateRPC{} }
func (m *ContactUpdateRPC) String() string { return proto.CompactTextString(m) }
func (*ContactUpdateRPC) ProtoMessage()    {}
func (*ContactUpdateRPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{5}
}
func (m *ContactUpdateRPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactUpdateRPC.Unmarshal(m, b)
}
func (m *ContactUpdateRPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactUpdateRPC.Marshal(b, m, deterministic)
}
func (dst *ContactUpdateRPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactUpdateRPC.Merge(dst, src)
}
func (m *ContactUpdateRPC) XXX_Size() int {
	return xxx_messageInfo_ContactUpdateRPC.Size(m)
}
func (m *ContactUpdateRPC) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactUpdateRPC.DiscardUnknown(m)
}

var xxx_messageInfo_ContactUpdateRPC proto.InternalMessageInfo

func (m *ContactUpdateRPC) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *ContactUpdateRPC) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *ContactUpdateRPC) GetPayload() *ContactUpdatePayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Sent among peers
type DirectMessageProtocol struct {
	// Which ephemeral key has been used
	//
	// Types that are valid to be assigned to EphemeralKey:
	//	*DirectMessageProtocol_BundleKey
	//	*DirectMessageProtocol_DhKey
	//	*DirectMessageProtocol_SymKey
	EphemeralKey isDirectMessageProtocol_EphemeralKey `protobuf_oneof:"ephemeral_key"`
	// Types that are valid to be assigned to Payload:
	//	*DirectMessageProtocol_OneToOnePayload
	//	*DirectMessageProtocol_ContactUpdatePayload
	Payload              isDirectMessageProtocol_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DirectMessageProtocol) Reset()         { *m = DirectMessageProtocol{} }
func (m *DirectMessageProtocol) String() string { return proto.CompactTextString(m) }
func (*DirectMessageProtocol) ProtoMessage()    {}
func (*DirectMessageProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{6}
}
func (m *DirectMessageProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectMessageProtocol.Unmarshal(m, b)
}
func (m *DirectMessageProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectMessageProtocol.Marshal(b, m, deterministic)
}
func (dst *DirectMessageProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectMessageProtocol.Merge(dst, src)
}
func (m *DirectMessageProtocol) XXX_Size() int {
	return xxx_messageInfo_DirectMessageProtocol.Size(m)
}
func (m *DirectMessageProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectMessageProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_DirectMessageProtocol proto.InternalMessageInfo

type isDirectMessageProtocol_EphemeralKey interface {
	isDirectMessageProtocol_EphemeralKey()
}
type isDirectMessageProtocol_Payload interface {
	isDirectMessageProtocol_Payload()
}

type DirectMessageProtocol_BundleKey struct {
	BundleKey []byte `protobuf:"bytes,1,opt,name=bundle_key,json=bundleKey,proto3,oneof"`
}
type DirectMessageProtocol_DhKey struct {
	DhKey []byte `protobuf:"bytes,2,opt,name=dh_key,json=dhKey,proto3,oneof"`
}
type DirectMessageProtocol_SymKey struct {
	SymKey []byte `protobuf:"bytes,3,opt,name=sym_key,json=symKey,proto3,oneof"`
}
type DirectMessageProtocol_OneToOnePayload struct {
	OneToOnePayload []byte `protobuf:"bytes,101,opt,name=one_to_one_payload,json=oneToOnePayload,proto3,oneof"`
}
type DirectMessageProtocol_ContactUpdatePayload struct {
	ContactUpdatePayload []byte `protobuf:"bytes,102,opt,name=contact_update_payload,json=contactUpdatePayload,proto3,oneof"`
}

func (*DirectMessageProtocol_BundleKey) isDirectMessageProtocol_EphemeralKey()       {}
func (*DirectMessageProtocol_DhKey) isDirectMessageProtocol_EphemeralKey()           {}
func (*DirectMessageProtocol_SymKey) isDirectMessageProtocol_EphemeralKey()          {}
func (*DirectMessageProtocol_OneToOnePayload) isDirectMessageProtocol_Payload()      {}
func (*DirectMessageProtocol_ContactUpdatePayload) isDirectMessageProtocol_Payload() {}

func (m *DirectMessageProtocol) GetEphemeralKey() isDirectMessageProtocol_EphemeralKey {
	if m != nil {
		return m.EphemeralKey
	}
	return nil
}
func (m *DirectMessageProtocol) GetPayload() isDirectMessageProtocol_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *DirectMessageProtocol) GetBundleKey() []byte {
	if x, ok := m.GetEphemeralKey().(*DirectMessageProtocol_BundleKey); ok {
		return x.BundleKey
	}
	return nil
}

func (m *DirectMessageProtocol) GetDhKey() []byte {
	if x, ok := m.GetEphemeralKey().(*DirectMessageProtocol_DhKey); ok {
		return x.DhKey
	}
	return nil
}

func (m *DirectMessageProtocol) GetSymKey() []byte {
	if x, ok := m.GetEphemeralKey().(*DirectMessageProtocol_SymKey); ok {
		return x.SymKey
	}
	return nil
}

func (m *DirectMessageProtocol) GetOneToOnePayload() []byte {
	if x, ok := m.GetPayload().(*DirectMessageProtocol_OneToOnePayload); ok {
		return x.OneToOnePayload
	}
	return nil
}

func (m *DirectMessageProtocol) GetContactUpdatePayload() []byte {
	if x, ok := m.GetPayload().(*DirectMessageProtocol_ContactUpdatePayload); ok {
		return x.ContactUpdatePayload
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DirectMessageProtocol) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DirectMessageProtocol_OneofMarshaler, _DirectMessageProtocol_OneofUnmarshaler, _DirectMessageProtocol_OneofSizer, []interface{}{
		(*DirectMessageProtocol_BundleKey)(nil),
		(*DirectMessageProtocol_DhKey)(nil),
		(*DirectMessageProtocol_SymKey)(nil),
		(*DirectMessageProtocol_OneToOnePayload)(nil),
		(*DirectMessageProtocol_ContactUpdatePayload)(nil),
	}
}

func _DirectMessageProtocol_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DirectMessageProtocol)
	// ephemeral_key
	switch x := m.EphemeralKey.(type) {
	case *DirectMessageProtocol_BundleKey:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.BundleKey)
	case *DirectMessageProtocol_DhKey:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.DhKey)
	case *DirectMessageProtocol_SymKey:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.SymKey)
	case nil:
	default:
		return fmt.Errorf("DirectMessageProtocol.EphemeralKey has unexpected type %T", x)
	}
	// payload
	switch x := m.Payload.(type) {
	case *DirectMessageProtocol_OneToOnePayload:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.OneToOnePayload)
	case *DirectMessageProtocol_ContactUpdatePayload:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ContactUpdatePayload)
	case nil:
	default:
		return fmt.Errorf("DirectMessageProtocol.Payload has unexpected type %T", x)
	}
	return nil
}

func _DirectMessageProtocol_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DirectMessageProtocol)
	switch tag {
	case 1: // ephemeral_key.bundle_key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.EphemeralKey = &DirectMessageProtocol_BundleKey{x}
		return true, err
	case 2: // ephemeral_key.dh_key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.EphemeralKey = &DirectMessageProtocol_DhKey{x}
		return true, err
	case 3: // ephemeral_key.sym_key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.EphemeralKey = &DirectMessageProtocol_SymKey{x}
		return true, err
	case 101: // payload.one_to_one_payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Payload = &DirectMessageProtocol_OneToOnePayload{x}
		return true, err
	case 102: // payload.contact_update_payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Payload = &DirectMessageProtocol_ContactUpdatePayload{x}
		return true, err
	default:
		return false, nil
	}
}

func _DirectMessageProtocol_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DirectMessageProtocol)
	// ephemeral_key
	switch x := m.EphemeralKey.(type) {
	case *DirectMessageProtocol_BundleKey:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.BundleKey)))
		n += len(x.BundleKey)
	case *DirectMessageProtocol_DhKey:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.DhKey)))
		n += len(x.DhKey)
	case *DirectMessageProtocol_SymKey:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.SymKey)))
		n += len(x.SymKey)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// payload
	switch x := m.Payload.(type) {
	case *DirectMessageProtocol_OneToOnePayload:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.OneToOnePayload)))
		n += len(x.OneToOnePayload)
	case *DirectMessageProtocol_ContactUpdatePayload:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ContactUpdatePayload)))
		n += len(x.ContactUpdatePayload)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Message sent among peers
type ProtocolMessage struct {
	Bundle *Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	// Types that are valid to be assigned to MessageType:
	//	*ProtocolMessage_DirectMessage
	MessageType          isProtocolMessage_MessageType `protobuf_oneof:"message_type"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ProtocolMessage) Reset()         { *m = ProtocolMessage{} }
func (m *ProtocolMessage) String() string { return proto.CompactTextString(m) }
func (*ProtocolMessage) ProtoMessage()    {}
func (*ProtocolMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_60d02244b3cb65cc, []int{7}
}
func (m *ProtocolMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolMessage.Unmarshal(m, b)
}
func (m *ProtocolMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolMessage.Marshal(b, m, deterministic)
}
func (dst *ProtocolMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolMessage.Merge(dst, src)
}
func (m *ProtocolMessage) XXX_Size() int {
	return xxx_messageInfo_ProtocolMessage.Size(m)
}
func (m *ProtocolMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolMessage proto.InternalMessageInfo

type isProtocolMessage_MessageType interface {
	isProtocolMessage_MessageType()
}

type ProtocolMessage_DirectMessage struct {
	DirectMessage *DirectMessageProtocol `protobuf:"bytes,101,opt,name=direct_message,json=directMessage,proto3,oneof"`
}

func (*ProtocolMessage_DirectMessage) isProtocolMessage_MessageType() {}

func (m *ProtocolMessage) GetMessageType() isProtocolMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (m *ProtocolMessage) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

func (m *ProtocolMessage) GetDirectMessage() *DirectMessageProtocol {
	if x, ok := m.GetMessageType().(*ProtocolMessage_DirectMessage); ok {
		return x.DirectMessage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProtocolMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProtocolMessage_OneofMarshaler, _ProtocolMessage_OneofUnmarshaler, _ProtocolMessage_OneofSizer, []interface{}{
		(*ProtocolMessage_DirectMessage)(nil),
	}
}

func _ProtocolMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProtocolMessage)
	// message_type
	switch x := m.MessageType.(type) {
	case *ProtocolMessage_DirectMessage:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DirectMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProtocolMessage.MessageType has unexpected type %T", x)
	}
	return nil
}

func _ProtocolMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProtocolMessage)
	switch tag {
	case 101: // message_type.direct_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DirectMessageProtocol)
		err := b.DecodeMessage(msg)
		m.MessageType = &ProtocolMessage_DirectMessage{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProtocolMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProtocolMessage)
	// message_type
	switch x := m.MessageType.(type) {
	case *ProtocolMessage_DirectMessage:
		s := proto.Size(x.DirectMessage)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Bundle)(nil), "chat.Bundle")
	proto.RegisterType((*BundleContainer)(nil), "chat.BundleContainer")
	proto.RegisterType((*OneToOnePayload)(nil), "chat.OneToOnePayload")
	proto.RegisterType((*ContactUpdatePayload)(nil), "chat.ContactUpdatePayload")
	proto.RegisterType((*OneToOneRPC)(nil), "chat.OneToOneRPC")
	proto.RegisterType((*ContactUpdateRPC)(nil), "chat.ContactUpdateRPC")
	proto.RegisterType((*DirectMessageProtocol)(nil), "chat.DirectMessageProtocol")
	proto.RegisterType((*ProtocolMessage)(nil), "chat.ProtocolMessage")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_chat_60d02244b3cb65cc) }

var fileDescriptor_chat_60d02244b3cb65cc = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcf, 0x4e, 0xdb, 0x4e,
	0x10, 0xc6, 0xbf, 0xf0, 0x0b, 0x78, 0x1c, 0x08, 0xda, 0x02, 0x4d, 0xa1, 0x12, 0xd4, 0xe5, 0xc0,
	0xa5, 0x54, 0x0a, 0x55, 0x1f, 0x20, 0x70, 0x48, 0x55, 0x55, 0x44, 0xdb, 0xb4, 0x57, 0x6b, 0xb3,
	0x3b, 0x49, 0xac, 0xd8, 0xbb, 0x96, 0xbd, 0x41, 0xf2, 0x0b, 0xf4, 0xd6, 0x4b, 0x5f, 0xb4, 0xaf,
	0x50, 0xed, 0x1f, 0x27, 0x10, 0xe5, 0xc0, 0x29, 0x33, 0xdf, 0x7c, 0x9b, 0xef, 0x9b, 0xd9, 0x59,
	0x03, 0xf0, 0x39, 0xd3, 0x37, 0x45, 0xa9, 0xb4, 0x22, 0xbb, 0x26, 0x8e, 0xe7, 0xd0, 0x1e, 0x2c,
	0xa5, 0xc8, 0x90, 0x9c, 0xc1, 0x7e, 0x2a, 0x50, 0xea, 0x54, 0xd7, 0xbd, 0xe0, 0x32, 0xb8, 0xee,
	0xd0, 0x55, 0x4e, 0xae, 0xe0, 0xb0, 0x4a, 0x67, 0x12, 0x45, 0x52, 0x94, 0x98, 0x2c, 0xb0, 0xee,
	0xfd, 0x67, 0x19, 0x1d, 0x87, 0x8e, 0x4a, 0xfc, 0x8a, 0x35, 0x79, 0x0b, 0xa1, 0xc9, 0x99, 0x5e,
	0x96, 0xd8, 0x6b, 0x59, 0xc2, 0x1a, 0x88, 0x33, 0xe8, 0x3a, 0xa5, 0x3b, 0x25, 0x35, 0x4b, 0x25,
	0x96, 0xe4, 0x0a, 0xda, 0x13, 0x0b, 0x59, 0xc1, 0xa8, 0xdf, 0xb9, 0xb1, 0xfe, 0x1c, 0x8d, 0xfa,
	0x1a, 0xb9, 0x85, 0xd3, 0xa2, 0x4c, 0x1f, 0x99, 0xc6, 0x64, 0xab, 0x89, 0x57, 0xbe, 0xfa, 0xfd,
	0x89, 0x97, 0xf8, 0x4f, 0x00, 0xdd, 0x07, 0x89, 0x63, 0xf5, 0x20, 0x71, 0xc4, 0xea, 0x4c, 0x31,
	0x41, 0x7a, 0xb0, 0xc7, 0x95, 0xd4, 0x28, 0xb5, 0xd5, 0x0b, 0x69, 0x93, 0x92, 0x77, 0xd0, 0xf1,
	0x61, 0xa2, 0xeb, 0x02, 0xed, 0x1f, 0x87, 0x34, 0xf2, 0xd8, 0xb8, 0x2e, 0xd0, 0x50, 0x72, 0xac,
	0x2a, 0x36, 0x43, 0x47, 0x69, 0x39, 0x8a, 0xc7, 0x2c, 0xe5, 0x02, 0x22, 0x9e, 0x29, 0xbe, 0x48,
	0x1e, 0x59, 0xb6, 0xc4, 0xde, 0xee, 0x65, 0x70, 0xdd, 0xa2, 0x60, 0xa1, 0x9f, 0x06, 0x89, 0x7f,
	0x05, 0x70, 0x6c, 0xbb, 0xe7, 0xfa, 0x47, 0x21, 0x98, 0x5e, 0x39, 0x23, 0xb0, 0x2b, 0x59, 0x8e,
	0xde, 0x96, 0x8d, 0xc9, 0x7b, 0x38, 0x28, 0x4a, 0x35, 0x4d, 0x33, 0x4c, 0xd2, 0x9c, 0xcd, 0x1a,
	0x53, 0x1d, 0x0f, 0x7e, 0x31, 0x98, 0x69, 0x89, 0x09, 0x51, 0x62, 0x55, 0x79, 0x43, 0x4d, 0x4a,
	0xce, 0x21, 0x9c, 0xf2, 0x3c, 0xd1, 0x6a, 0x81, 0xd2, 0x5a, 0x09, 0xe9, 0xfe, 0x94, 0xe7, 0x63,
	0x93, 0xc7, 0x13, 0x88, 0x9a, 0xe1, 0xd0, 0xd1, 0x1d, 0x39, 0x82, 0x56, 0x55, 0x72, 0xaf, 0x6e,
	0x42, 0x83, 0x88, 0x4a, 0x7b, 0x49, 0x13, 0x92, 0x8f, 0xb0, 0x57, 0x38, 0xb7, 0x56, 0x29, 0xea,
	0x9f, 0xb8, 0xcb, 0xda, 0x18, 0x32, 0x6d, 0x58, 0x71, 0x06, 0x47, 0xcf, 0x7a, 0x7d, 0xa9, 0xd0,
	0xa7, 0x4d, 0xa1, 0x33, 0x27, 0xb4, 0x6d, 0x70, 0x6b, 0xb5, 0xbf, 0x01, 0x9c, 0xdc, 0xa7, 0x25,
	0x72, 0xfd, 0xcd, 0xdd, 0xc8, 0xc8, 0x2c, 0x39, 0x57, 0x19, 0xb9, 0x00, 0x70, 0x8b, 0x64, 0x57,
	0xc6, 0x6e, 0xf6, 0x70, 0x87, 0x86, 0x0e, 0x33, 0x6b, 0xfb, 0x1a, 0xda, 0x62, 0xbe, 0xde, 0xa7,
	0xe1, 0x0e, 0xfd, 0x5f, 0xcc, 0x4d, 0xe1, 0x0d, 0xec, 0x55, 0x75, 0x6e, 0x2b, 0x2d, 0x5f, 0x69,
	0x57, 0x75, 0x6e, 0x4a, 0x1f, 0x80, 0x28, 0x89, 0x89, 0x56, 0x89, 0xf9, 0x69, 0xfc, 0xa2, 0x65,
	0x05, 0xb4, 0xab, 0x36, 0x36, 0xef, 0x33, 0x9c, 0x72, 0x67, 0x3f, 0x59, 0x5a, 0xff, 0xab, 0x23,
	0x53, 0x7f, 0xe4, 0x98, 0x6f, 0x69, 0x6f, 0xd0, 0x85, 0x03, 0x2c, 0xe6, 0x98, 0x63, 0xc9, 0x32,
	0xe3, 0x63, 0x10, 0xae, 0x86, 0x13, 0xff, 0x0e, 0xa0, 0xdb, 0x34, 0xe9, 0x7b, 0x7e, 0xe1, 0x83,
	0xba, 0x87, 0x43, 0x61, 0x47, 0x95, 0xf8, 0xed, 0xb5, 0xc6, 0xa3, 0xfe, 0xb9, 0x63, 0x6f, 0x1d,
	0xe3, 0x70, 0x87, 0x1e, 0x88, 0xa7, 0x85, 0xc1, 0xe1, 0xf3, 0x07, 0x31, 0x69, 0xdb, 0xcf, 0xca,
	0xed, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x23, 0x98, 0x9c, 0xe4, 0x64, 0x04, 0x00, 0x00,
}
