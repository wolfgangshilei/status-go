// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

/*
Package chat is a generated protocol buffer package.

It is generated from these files:
	chat.proto

It has these top-level messages:
	Bundle
	BundleContainer
	OneToOnePayload
	OneToOne
*/
package chat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bundle struct {
	Identity     []byte `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	SignedPreKey []byte `protobuf:"bytes,2,opt,name=signed_pre_key,json=signedPreKey,proto3" json:"signed_pre_key,omitempty"`
	Signature    []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *Bundle) Reset()                    { *m = Bundle{} }
func (m *Bundle) String() string            { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()               {}
func (*Bundle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Bundle) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Bundle) GetSignedPreKey() []byte {
	if m != nil {
		return m.SignedPreKey
	}
	return nil
}

func (m *Bundle) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type BundleContainer struct {
	Bundle              *Bundle `protobuf:"bytes,1,opt,name=bundle" json:"bundle,omitempty"`
	PrivateSignedPreKey []byte  `protobuf:"bytes,2,opt,name=private_signed_pre_key,json=privateSignedPreKey,proto3" json:"private_signed_pre_key,omitempty"`
}

func (m *BundleContainer) Reset()                    { *m = BundleContainer{} }
func (m *BundleContainer) String() string            { return proto.CompactTextString(m) }
func (*BundleContainer) ProtoMessage()               {}
func (*BundleContainer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BundleContainer) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

func (m *BundleContainer) GetPrivateSignedPreKey() []byte {
	if m != nil {
		return m.PrivateSignedPreKey
	}
	return nil
}

// What is sent through the wire
type OneToOnePayload struct {
	Content     string  `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	ContentType string  `protobuf:"bytes,2,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	MessageType string  `protobuf:"bytes,3,opt,name=message_type,json=messageType" json:"message_type,omitempty"`
	ClockValue  int64   `protobuf:"varint,4,opt,name=clock_value,json=clockValue" json:"clock_value,omitempty"`
	Bundle      *Bundle `protobuf:"bytes,5,opt,name=bundle" json:"bundle,omitempty"`
}

func (m *OneToOnePayload) Reset()                    { *m = OneToOnePayload{} }
func (m *OneToOnePayload) String() string            { return proto.CompactTextString(m) }
func (*OneToOnePayload) ProtoMessage()               {}
func (*OneToOnePayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OneToOnePayload) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *OneToOnePayload) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *OneToOnePayload) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *OneToOnePayload) GetClockValue() int64 {
	if m != nil {
		return m.ClockValue
	}
	return 0
}

func (m *OneToOnePayload) GetBundle() *Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

// What is sent to RPC
type OneToOne struct {
	Dst     string           `protobuf:"bytes,1,opt,name=dst" json:"dst,omitempty"`
	Payload *OneToOnePayload `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	// Eventually removed if we persist bundles in status-go
	BundleId string `protobuf:"bytes,10,opt,name=bundleId" json:"bundleId,omitempty"`
}

func (m *OneToOne) Reset()                    { *m = OneToOne{} }
func (m *OneToOne) String() string            { return proto.CompactTextString(m) }
func (*OneToOne) ProtoMessage()               {}
func (*OneToOne) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OneToOne) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *OneToOne) GetPayload() *OneToOnePayload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *OneToOne) GetBundleId() string {
	if m != nil {
		return m.BundleId
	}
	return ""
}

func init() {
	proto.RegisterType((*Bundle)(nil), "chat.Bundle")
	proto.RegisterType((*BundleContainer)(nil), "chat.BundleContainer")
	proto.RegisterType((*OneToOnePayload)(nil), "chat.OneToOnePayload")
	proto.RegisterType((*OneToOne)(nil), "chat.OneToOne")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0xc9, 0x97, 0x7e, 0xfd, 0x73, 0x13, 0xac, 0x8c, 0x28, 0x41, 0x04, 0x6b, 0xe8, 0xa2,
	0xab, 0x0a, 0xed, 0x1b, 0xe8, 0x4a, 0x5c, 0xb4, 0xc4, 0xe2, 0x36, 0x4c, 0x93, 0x4b, 0x1b, 0x1a,
	0x67, 0xc2, 0x64, 0x52, 0x98, 0x37, 0xf3, 0xf1, 0x64, 0xee, 0x24, 0xb5, 0x88, 0xee, 0xee, 0x3d,
	0xf3, 0xe3, 0xdc, 0x73, 0x48, 0x00, 0xb2, 0x3d, 0xd7, 0xf3, 0x4a, 0x49, 0x2d, 0x59, 0xcf, 0xce,
	0xf1, 0x1e, 0xfa, 0x4f, 0x8d, 0xc8, 0x4b, 0x64, 0xb7, 0x30, 0x2c, 0x72, 0x14, 0xba, 0xd0, 0x26,
	0xf2, 0x26, 0xde, 0x2c, 0x4c, 0x4e, 0x3b, 0x9b, 0xc2, 0x45, 0x5d, 0xec, 0x04, 0xe6, 0x69, 0xa5,
	0x30, 0x3d, 0xa0, 0x89, 0xfe, 0x11, 0x11, 0x3a, 0x75, 0xad, 0xf0, 0x15, 0x0d, 0xbb, 0x83, 0x91,
	0xdd, 0xb9, 0x6e, 0x14, 0x46, 0x3e, 0x01, 0xdf, 0x42, 0x5c, 0xc2, 0xd8, 0x5d, 0x7a, 0x96, 0x42,
	0xf3, 0x42, 0xa0, 0x62, 0x53, 0xe8, 0x6f, 0x49, 0xa2, 0x83, 0xc1, 0x22, 0x9c, 0x53, 0x3e, 0x87,
	0x25, 0xed, 0x1b, 0x5b, 0xc2, 0x4d, 0xa5, 0x8a, 0x23, 0xd7, 0x98, 0xfe, 0x1a, 0xe2, 0xaa, 0x7d,
	0x7d, 0x3b, 0xcb, 0x12, 0x7f, 0x7a, 0x30, 0x5e, 0x09, 0xdc, 0xc8, 0x95, 0xc0, 0x35, 0x37, 0xa5,
	0xe4, 0x39, 0x8b, 0x60, 0x90, 0x49, 0xa1, 0x51, 0x68, 0xba, 0x37, 0x4a, 0xba, 0x95, 0x3d, 0x40,
	0xd8, 0x8e, 0xa9, 0x36, 0x15, 0x92, 0xf1, 0x28, 0x09, 0x5a, 0x6d, 0x63, 0x2a, 0xb4, 0xc8, 0x07,
	0xd6, 0x35, 0xdf, 0xa1, 0x43, 0x7c, 0x87, 0xb4, 0x1a, 0x21, 0xf7, 0x10, 0x64, 0xa5, 0xcc, 0x0e,
	0xe9, 0x91, 0x97, 0x0d, 0x46, 0xbd, 0x89, 0x37, 0xf3, 0x13, 0x20, 0xe9, 0xdd, 0x2a, 0x67, 0x7d,
	0xff, 0xff, 0xdd, 0x37, 0x2e, 0x60, 0xd8, 0x25, 0x67, 0x97, 0xe0, 0xe7, 0x75, 0x17, 0xd7, 0x8e,
	0xec, 0x11, 0x06, 0x95, 0xeb, 0x43, 0x29, 0x83, 0xc5, 0xb5, 0x33, 0xf9, 0x51, 0x36, 0xe9, 0x28,
	0xfb, 0x5d, 0x9d, 0xf1, 0x4b, 0x1e, 0x01, 0xf9, 0x9c, 0xf6, 0x6d, 0x9f, 0x7e, 0x85, 0xe5, 0x57,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x0f, 0x34, 0x12, 0x18, 0x02, 0x00, 0x00,
}
